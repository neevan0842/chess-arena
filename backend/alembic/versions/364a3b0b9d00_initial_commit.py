"""initial commit

Revision ID: 364a3b0b9d00
Revises: 
Create Date: 2025-02-27 13:58:15.043244

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "364a3b0b9d00"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "users",
        sa.Column("id", sa.String(length=36), nullable=False),
        sa.Column("username", sa.String(length=50), nullable=True),
        sa.Column("email", sa.String(length=100), nullable=False),
        sa.Column("hashed_password", sa.Text(), nullable=True),
        sa.Column("oauth_provider", sa.String(length=50), nullable=True),
        sa.Column("oauth_provider_id", sa.String(length=255), nullable=True),
        sa.Column("refresh_token", sa.Text(), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=True),
        sa.Column(
            "created_at", sa.TIMESTAMP(), server_default=sa.text("now()"), nullable=True
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("email"),
        sa.UniqueConstraint("oauth_provider_id"),
        sa.UniqueConstraint("username"),
    )
    op.create_index(op.f("ix_users_id"), "users", ["id"], unique=False)
    op.create_table(
        "games",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("player_white_id", sa.String(length=36), nullable=False),
        sa.Column("player_black_id", sa.String(length=36), nullable=True),
        sa.Column(
            "game_type", sa.Enum("MULTIPLAYER", "AI", name="gametype"), nullable=True
        ),
        sa.Column(
            "ai_difficulty",
            sa.Enum("EASY", "MEDIUM", "HARD", name="aidifficulty"),
            nullable=True,
        ),
        sa.Column("fen", sa.String(), nullable=True),
        sa.Column(
            "status",
            sa.Enum("WAITING", "ONGOING", "FINISHED", name="gamestatus"),
            nullable=True,
        ),
        sa.Column(
            "winner",
            sa.Enum("WHITE", "BLACK", "DRAW", "ONGOING", "AI", name="winner"),
            nullable=True,
        ),
        sa.Column(
            "created_at", sa.TIMESTAMP(), server_default=sa.text("now()"), nullable=True
        ),
        sa.Column(
            "updated_at", sa.TIMESTAMP(), server_default=sa.text("now()"), nullable=True
        ),
        sa.ForeignKeyConstraint(
            ["player_black_id"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["player_white_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_games_id"), "games", ["id"], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_games_id"), table_name="games")
    op.drop_table("games")
    op.drop_index(op.f("ix_users_id"), table_name="users")
    op.drop_table("users")

    # Drop enum types
    sa.Enum("MULTIPLAYER", "AI", name="gametype").drop(op.get_bind(), checkfirst=True)
    sa.Enum("EASY", "MEDIUM", "HARD", name="aidifficulty").drop(
        op.get_bind(), checkfirst=True
    )
    sa.Enum("WAITING", "ONGOING", "FINISHED", name="gamestatus").drop(
        op.get_bind(), checkfirst=True
    )
    sa.Enum("WHITE", "BLACK", "DRAW", "ONGOING", "AI", name="winner").drop(
        op.get_bind(), checkfirst=True
    )

    # ### end Alembic commands ###
